plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
	id "com.matthewprenger.cursegradle" version "1.0.4"
}

apply plugin: 'idea'

dependencies {
    compile 'org.jetbrains:annotations:13.0'
}

if(!invtweaks_version) {
    invtweaks_version = 'UNKNOWN'
}

def getGitCommitHash = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch(ignored) {
        return null;
    }
}

def getGitDirtyIndex = { ->
    try {
        return exec {
            commandLine 'git', 'diff-index', '--quiet', '--cached', 'HEAD'
            ignoreExitValue = true
        }.exitValue == 1
    } catch(ignored) {
        return false;
    }
}

def getGitDirtyFiles = { ->
    try {
        return exec {
            commandLine 'git', 'diff-files', '--quiet'
            ignoreExitValue = true
        }.exitValue == 1
    } catch(ignored) {
        return false;
    }
}

def getGitChangelog = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        def gitHash = System.getenv("GIT_COMMIT")
        def gitPrevHash = System.getenv("GIT_PREVIOUS_COMMIT")
        def travisRange = System.getenv("TRAVIS_COMMIT_RANGE")
        if(gitHash && gitPrevHash) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:%s - %aN', '' + gitPrevHash + '...' + gitHash
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else if(travisRange) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:%s - %aN', '' + travisRange
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else {
            return "";
        }
    } catch(ignored) {
        return "";
    }
}

ext.git_version = getGitCommitHash()
ext.git_dirty = getGitDirtyIndex() || getGitDirtyFiles()

ext.build_number = System.getenv('BUILD_NUMBER')
if(!build_number) {
    ext.build_number = System.getenv('TRAVIS_BUILD_NUMBER')
}

if(build_number) {
    version = invtweaks_version + "-" + build_number
} else {
    version = invtweaks_version
}

if(git_version) {
    ext.internal_version = version + '-' + git_version
    if(git_dirty) {
        ext.internal_version += '-dirty'
    }
} else {
    ext.internal_version = version
}

group = 'inventorytweaks' // No stupid URL conventions
archivesBaseName = 'InventoryTweaks'

ext.mcversion = '1.8'
minecraft {
    version = '1.8-11.14.3.1543'
    mappings = 'snapshot_20151102'
    at 'src/main/resources/invtweaks_at.cfg'

    replace '@VERSION@', project.internal_version
    replaceIn 'InvTweaksConst.java'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
    options.debug = true
    options.debugOptions.debugLevel = 'source,lines,vars'
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'invtweaks.forge.asm.FMLPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }
}

task apiJar(type: Jar) {
    dependsOn processResources

    from sourceSets.main.allJava
    include 'invtweaks/api/**'

    appendix = 'api'
}

task deobfJar(type: Jar) {
    dependsOn classes

    from sourceSets.main.output

    manifest {
        attributes 'FMLCorePlugin': 'invtweaks.forge.asm.FMLPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }

    appendix = 'deobf'
}

artifacts {
    archives apiJar
    archives deobfJar
}

ext.curseKey = System.getenv("CURSE_API_KEY")
if(invtweaks_version.endsWith("-dev")) {
    ext.curseType = 'alpha'
    ext.curseVersion = version
} else if(invtweaks_version.endsWith("-beta")) {
    ext.curseType = 'beta'
    ext.curseVersion = version
} else {
    ext.curseType = 'release'
    ext.curseVersion = invtweaks_version
}

tasks.curseforge.onlyIf { curseKey }
tasks.curseforge.dependsOn jar, apiJar, deobfJar

if(curseKey) {
    curseforge  {
        apiKey = curseKey

		project {
			id = '223094'
			changelog = getGitChangelog()
			releaseType = curseType
			addGameVersion mcversion
			addGameVersion "Java 8"

			mainArtifact(jar) {
				displayName = 'Inventory Tweaks ' + curseVersion
			}

			addArtifact(apiJar) {
				displayName = 'Inventory Tweaks API ' + curseVersion
			}

			addArtifact(deobfJar) {
				displayName = 'Inventory Tweaks Deobfuscated ' + curseVersion
			}
		}
    }
}

processResources {
    inputs.property 'version', internal_version
    inputs.property 'mcversion', mcversion

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.png'
        exclude '**/*_at.cfg'

        expand version: internal_version, mcversion: mcversion
    }
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.png'
        include '**/*_at.cfg'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }

    project {
        vcs = 'Git'
    }
}
